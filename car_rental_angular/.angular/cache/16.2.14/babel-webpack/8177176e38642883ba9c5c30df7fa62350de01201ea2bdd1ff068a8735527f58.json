{"ast":null,"code":"import { ComponentPortal } from '@angular/cdk/portal';\nimport * as i0 from '@angular/core';\nimport { Directive, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, Output, NgModule, Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { filter, take, takeUntil } from 'rxjs/operators';\nimport * as i1 from 'ng-zorro-antd/core/config';\nimport { toCssPixel } from 'ng-zorro-antd/core/util';\nimport * as i1$1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { moveUpMotion } from 'ng-zorro-antd/core/animation';\nimport * as i2 from 'ng-zorro-antd/icon';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport * as i3 from 'ng-zorro-antd/core/outlet';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport * as i2$1 from '@angular/cdk/overlay';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport * as i1$2 from 'ng-zorro-antd/core/services';\nfunction NzMessageComponent_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 10);\n  }\n}\nfunction NzMessageComponent_span_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 11);\n  }\n}\nfunction NzMessageComponent_span_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 12);\n  }\n}\nfunction NzMessageComponent_span_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 13);\n  }\n}\nfunction NzMessageComponent_span_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 14);\n  }\n}\nfunction NzMessageComponent_ng_container_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"span\", 15);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"innerHTML\", ctx_r5.instance.content, i0.ɵɵsanitizeHtml);\n  }\n}\nfunction NzMessageContainerComponent_nz_message_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"nz-message\", 2);\n    i0.ɵɵlistener(\"destroyed\", function NzMessageContainerComponent_nz_message_1_Template_nz_message_destroyed_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.remove($event.id, $event.userAction));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const instance_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"instance\", instance_r1);\n  }\n}\nlet globalCounter = 0;\nclass NzMNService {\n  constructor(nzSingletonService, overlay, injector) {\n    this.nzSingletonService = nzSingletonService;\n    this.overlay = overlay;\n    this.injector = injector;\n  }\n  remove(id) {\n    if (this.container) {\n      if (id) {\n        this.container.remove(id);\n      } else {\n        this.container.removeAll();\n      }\n    }\n  }\n  getInstanceId() {\n    return `${this.componentPrefix}-${globalCounter++}`;\n  }\n  withContainer(ctor) {\n    let containerInstance = this.nzSingletonService.getSingletonWithKey(this.componentPrefix);\n    if (containerInstance) {\n      return containerInstance;\n    }\n    const overlayRef = this.overlay.create({\n      hasBackdrop: false,\n      scrollStrategy: this.overlay.scrollStrategies.noop(),\n      positionStrategy: this.overlay.position().global()\n    });\n    const componentPortal = new ComponentPortal(ctor, null, this.injector);\n    const componentRef = overlayRef.attach(componentPortal);\n    const overlayWrapper = overlayRef.hostElement;\n    overlayWrapper.style.zIndex = '1010';\n    if (!containerInstance) {\n      this.container = containerInstance = componentRef.instance;\n      this.nzSingletonService.registerSingletonWithKey(this.componentPrefix, containerInstance);\n      this.container.afterAllInstancesRemoved.subscribe(() => {\n        this.container = undefined;\n        this.nzSingletonService.unregisterSingletonWithKey(this.componentPrefix);\n        overlayRef.dispose();\n      });\n    }\n    return containerInstance;\n  }\n}\nclass NzMNContainerComponent {\n  constructor(cdr, nzConfigService) {\n    this.cdr = cdr;\n    this.nzConfigService = nzConfigService;\n    this.instances = [];\n    this._afterAllInstancesRemoved = new Subject();\n    this.afterAllInstancesRemoved = this._afterAllInstancesRemoved.asObservable();\n    this.destroy$ = new Subject();\n    this.updateConfig();\n  }\n  ngOnInit() {\n    this.subscribeConfigChange();\n  }\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n  create(data) {\n    const instance = this.onCreate(data);\n    if (this.instances.length >= this.config.nzMaxStack) {\n      this.instances = this.instances.slice(1);\n    }\n    this.instances = [...this.instances, instance];\n    this.readyInstances();\n    return instance;\n  }\n  remove(id, userAction = false) {\n    this.instances.map((instance, index) => ({\n      index,\n      instance\n    })).filter(({\n      instance\n    }) => instance.messageId === id).forEach(({\n      index,\n      instance\n    }) => {\n      this.instances.splice(index, 1);\n      this.instances = [...this.instances];\n      this.onRemove(instance, userAction);\n      this.readyInstances();\n    });\n    if (!this.instances.length) {\n      this.onAllInstancesRemoved();\n    }\n  }\n  removeAll() {\n    this.instances.forEach(i => this.onRemove(i, false));\n    this.instances = [];\n    this.readyInstances();\n    this.onAllInstancesRemoved();\n  }\n  onCreate(instance) {\n    instance.options = this.mergeOptions(instance.options);\n    instance.onClose = new Subject();\n    return instance;\n  }\n  onRemove(instance, userAction) {\n    instance.onClose.next(userAction);\n    instance.onClose.complete();\n  }\n  onAllInstancesRemoved() {\n    this._afterAllInstancesRemoved.next();\n    this._afterAllInstancesRemoved.complete();\n  }\n  readyInstances() {\n    this.cdr.detectChanges();\n  }\n  mergeOptions(options) {\n    const {\n      nzDuration,\n      nzAnimate,\n      nzPauseOnHover\n    } = this.config;\n    return {\n      nzDuration,\n      nzAnimate,\n      nzPauseOnHover,\n      ...options\n    };\n  }\n  static #_ = this.ɵfac = function NzMNContainerComponent_Factory(t) {\n    return new (t || NzMNContainerComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.NzConfigService));\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: NzMNContainerComponent\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzMNContainerComponent, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i1.NzConfigService\n    }];\n  }, null);\n})();\nclass NzMNComponent {\n  constructor(cdr) {\n    this.cdr = cdr;\n    this.destroyed = new EventEmitter();\n    this.animationStateChanged = new Subject();\n    this.userAction = false;\n    this.eraseTimer = null;\n  }\n  ngOnInit() {\n    this.options = this.instance.options;\n    if (this.options.nzAnimate) {\n      this.instance.state = 'enter';\n      this.animationStateChanged.pipe(filter(event => event.phaseName === 'done' && event.toState === 'leave'), take(1)).subscribe(() => {\n        clearTimeout(this.closeTimer);\n        this.destroyed.next({\n          id: this.instance.messageId,\n          userAction: this.userAction\n        });\n      });\n    }\n    this.autoClose = this.options.nzDuration > 0;\n    if (this.autoClose) {\n      this.initErase();\n      this.startEraseTimeout();\n    }\n  }\n  ngOnDestroy() {\n    if (this.autoClose) {\n      this.clearEraseTimeout();\n    }\n    this.animationStateChanged.complete();\n  }\n  onEnter() {\n    if (this.autoClose && this.options.nzPauseOnHover) {\n      this.clearEraseTimeout();\n      this.updateTTL();\n    }\n  }\n  onLeave() {\n    if (this.autoClose && this.options.nzPauseOnHover) {\n      this.startEraseTimeout();\n    }\n  }\n  destroy(userAction = false) {\n    this.userAction = userAction;\n    if (this.options.nzAnimate) {\n      this.instance.state = 'leave';\n      this.cdr.detectChanges();\n      this.closeTimer = setTimeout(() => {\n        this.closeTimer = undefined;\n        this.destroyed.next({\n          id: this.instance.messageId,\n          userAction\n        });\n      }, 200);\n    } else {\n      this.destroyed.next({\n        id: this.instance.messageId,\n        userAction\n      });\n    }\n  }\n  initErase() {\n    this.eraseTTL = this.options.nzDuration;\n    this.eraseTimingStart = Date.now();\n  }\n  updateTTL() {\n    if (this.autoClose) {\n      this.eraseTTL -= Date.now() - this.eraseTimingStart;\n    }\n  }\n  startEraseTimeout() {\n    if (this.eraseTTL > 0) {\n      this.clearEraseTimeout();\n      this.eraseTimer = setTimeout(() => this.destroy(), this.eraseTTL);\n      this.eraseTimingStart = Date.now();\n    } else {\n      this.destroy();\n    }\n  }\n  clearEraseTimeout() {\n    if (this.eraseTimer !== null) {\n      clearTimeout(this.eraseTimer);\n      this.eraseTimer = null;\n    }\n  }\n  static #_ = this.ɵfac = function NzMNComponent_Factory(t) {\n    return new (t || NzMNComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: NzMNComponent\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzMNComponent, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: i0.ChangeDetectorRef\n    }];\n  }, null);\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzMessageComponent extends NzMNComponent {\n  constructor(cdr) {\n    super(cdr);\n    this.destroyed = new EventEmitter();\n  }\n  static #_ = this.ɵfac = function NzMessageComponent_Factory(t) {\n    return new (t || NzMessageComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n  static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: NzMessageComponent,\n    selectors: [[\"nz-message\"]],\n    inputs: {\n      instance: \"instance\"\n    },\n    outputs: {\n      destroyed: \"destroyed\"\n    },\n    exportAs: [\"nzMessage\"],\n    features: [i0.ɵɵInheritDefinitionFeature],\n    decls: 10,\n    vars: 9,\n    consts: [[1, \"ant-message-notice\", 3, \"mouseenter\", \"mouseleave\"], [1, \"ant-message-notice-content\"], [1, \"ant-message-custom-content\", 3, \"ngClass\"], [3, \"ngSwitch\"], [\"nz-icon\", \"\", \"nzType\", \"check-circle\", 4, \"ngSwitchCase\"], [\"nz-icon\", \"\", \"nzType\", \"info-circle\", 4, \"ngSwitchCase\"], [\"nz-icon\", \"\", \"nzType\", \"exclamation-circle\", 4, \"ngSwitchCase\"], [\"nz-icon\", \"\", \"nzType\", \"close-circle\", 4, \"ngSwitchCase\"], [\"nz-icon\", \"\", \"nzType\", \"loading\", 4, \"ngSwitchCase\"], [4, \"nzStringTemplateOutlet\"], [\"nz-icon\", \"\", \"nzType\", \"check-circle\"], [\"nz-icon\", \"\", \"nzType\", \"info-circle\"], [\"nz-icon\", \"\", \"nzType\", \"exclamation-circle\"], [\"nz-icon\", \"\", \"nzType\", \"close-circle\"], [\"nz-icon\", \"\", \"nzType\", \"loading\"], [3, \"innerHTML\"]],\n    template: function NzMessageComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵlistener(\"@moveUpMotion.done\", function NzMessageComponent_Template_div_animation_moveUpMotion_done_0_listener($event) {\n          return ctx.animationStateChanged.next($event);\n        })(\"mouseenter\", function NzMessageComponent_Template_div_mouseenter_0_listener() {\n          return ctx.onEnter();\n        })(\"mouseleave\", function NzMessageComponent_Template_div_mouseleave_0_listener() {\n          return ctx.onLeave();\n        });\n        i0.ɵɵelementStart(1, \"div\", 1)(2, \"div\", 2);\n        i0.ɵɵelementContainerStart(3, 3);\n        i0.ɵɵtemplate(4, NzMessageComponent_span_4_Template, 1, 0, \"span\", 4);\n        i0.ɵɵtemplate(5, NzMessageComponent_span_5_Template, 1, 0, \"span\", 5);\n        i0.ɵɵtemplate(6, NzMessageComponent_span_6_Template, 1, 0, \"span\", 6);\n        i0.ɵɵtemplate(7, NzMessageComponent_span_7_Template, 1, 0, \"span\", 7);\n        i0.ɵɵtemplate(8, NzMessageComponent_span_8_Template, 1, 0, \"span\", 8);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵtemplate(9, NzMessageComponent_ng_container_9_Template, 2, 1, \"ng-container\", 9);\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"@moveUpMotion\", ctx.instance.state);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngClass\", \"ant-message-\" + ctx.instance.type);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngSwitch\", ctx.instance.type);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngSwitchCase\", \"success\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngSwitchCase\", \"info\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngSwitchCase\", \"warning\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngSwitchCase\", \"error\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngSwitchCase\", \"loading\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx.instance.content);\n      }\n    },\n    dependencies: [i1$1.NgClass, i1$1.NgSwitch, i1$1.NgSwitchCase, i2.NzIconDirective, i3.NzStringTemplateOutletDirective],\n    encapsulation: 2,\n    data: {\n      animation: [moveUpMotion]\n    },\n    changeDetection: 0\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzMessageComponent, [{\n    type: Component,\n    args: [{\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      selector: 'nz-message',\n      exportAs: 'nzMessage',\n      preserveWhitespaces: false,\n      animations: [moveUpMotion],\n      template: `\n    <div\n      class=\"ant-message-notice\"\n      [@moveUpMotion]=\"instance.state\"\n      (@moveUpMotion.done)=\"animationStateChanged.next($event)\"\n      (mouseenter)=\"onEnter()\"\n      (mouseleave)=\"onLeave()\"\n    >\n      <div class=\"ant-message-notice-content\">\n        <div class=\"ant-message-custom-content\" [ngClass]=\"'ant-message-' + instance.type\">\n          <ng-container [ngSwitch]=\"instance.type\">\n            <span *ngSwitchCase=\"'success'\" nz-icon nzType=\"check-circle\"></span>\n            <span *ngSwitchCase=\"'info'\" nz-icon nzType=\"info-circle\"></span>\n            <span *ngSwitchCase=\"'warning'\" nz-icon nzType=\"exclamation-circle\"></span>\n            <span *ngSwitchCase=\"'error'\" nz-icon nzType=\"close-circle\"></span>\n            <span *ngSwitchCase=\"'loading'\" nz-icon nzType=\"loading\"></span>\n          </ng-container>\n          <ng-container *nzStringTemplateOutlet=\"instance.content\">\n            <span [innerHTML]=\"instance.content\"></span>\n          </ng-container>\n        </div>\n      </div>\n    </div>\n  `\n    }]\n  }], function () {\n    return [{\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    instance: [{\n      type: Input\n    }],\n    destroyed: [{\n      type: Output\n    }]\n  });\n})();\nconst NZ_CONFIG_COMPONENT_NAME = 'message';\nconst NZ_MESSAGE_DEFAULT_CONFIG = {\n  nzAnimate: true,\n  nzDuration: 3000,\n  nzMaxStack: 7,\n  nzPauseOnHover: true,\n  nzTop: 24,\n  nzDirection: 'ltr'\n};\nclass NzMessageContainerComponent extends NzMNContainerComponent {\n  constructor(cdr, nzConfigService) {\n    super(cdr, nzConfigService);\n    this.dir = 'ltr';\n    const config = this.nzConfigService.getConfigForComponent(NZ_CONFIG_COMPONENT_NAME);\n    this.dir = config?.nzDirection || 'ltr';\n  }\n  subscribeConfigChange() {\n    this.nzConfigService.getConfigChangeEventForComponent(NZ_CONFIG_COMPONENT_NAME).pipe(takeUntil(this.destroy$)).subscribe(() => {\n      this.updateConfig();\n      const config = this.nzConfigService.getConfigForComponent(NZ_CONFIG_COMPONENT_NAME);\n      if (config) {\n        const {\n          nzDirection\n        } = config;\n        this.dir = nzDirection || this.dir;\n      }\n    });\n  }\n  updateConfig() {\n    this.config = {\n      ...NZ_MESSAGE_DEFAULT_CONFIG,\n      ...this.config,\n      ...this.nzConfigService.getConfigForComponent(NZ_CONFIG_COMPONENT_NAME)\n    };\n    this.top = toCssPixel(this.config.nzTop);\n    this.cdr.markForCheck();\n  }\n  static #_ = this.ɵfac = function NzMessageContainerComponent_Factory(t) {\n    return new (t || NzMessageContainerComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.NzConfigService));\n  };\n  static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: NzMessageContainerComponent,\n    selectors: [[\"nz-message-container\"]],\n    exportAs: [\"nzMessageContainer\"],\n    features: [i0.ɵɵInheritDefinitionFeature],\n    decls: 2,\n    vars: 5,\n    consts: [[1, \"ant-message\"], [3, \"instance\", \"destroyed\", 4, \"ngFor\", \"ngForOf\"], [3, \"instance\", \"destroyed\"]],\n    template: function NzMessageContainerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, NzMessageContainerComponent_nz_message_1_Template, 1, 1, \"nz-message\", 1);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵstyleProp(\"top\", ctx.top);\n        i0.ɵɵclassProp(\"ant-message-rtl\", ctx.dir === \"rtl\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.instances);\n      }\n    },\n    dependencies: [i1$1.NgForOf, NzMessageComponent],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzMessageContainerComponent, [{\n    type: Component,\n    args: [{\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      selector: 'nz-message-container',\n      exportAs: 'nzMessageContainer',\n      preserveWhitespaces: false,\n      template: `\n    <div class=\"ant-message\" [class.ant-message-rtl]=\"dir === 'rtl'\" [style.top]=\"top\">\n      <nz-message\n        *ngFor=\"let instance of instances\"\n        [instance]=\"instance\"\n        (destroyed)=\"remove($event.id, $event.userAction)\"\n      ></nz-message>\n    </div>\n  `\n    }]\n  }], function () {\n    return [{\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i1.NzConfigService\n    }];\n  }, null);\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzMessageModule {\n  static #_ = this.ɵfac = function NzMessageModule_Factory(t) {\n    return new (t || NzMessageModule)();\n  };\n  static #_2 = this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: NzMessageModule\n  });\n  static #_3 = this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [BidiModule, CommonModule, OverlayModule, NzIconModule, NzOutletModule]\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzMessageModule, [{\n    type: NgModule,\n    args: [{\n      imports: [BidiModule, CommonModule, OverlayModule, NzIconModule, NzOutletModule],\n      declarations: [NzMessageContainerComponent, NzMessageComponent]\n    }]\n  }], null, null);\n})();\nclass NzMessageService extends NzMNService {\n  constructor(nzSingletonService, overlay, injector) {\n    super(nzSingletonService, overlay, injector);\n    this.componentPrefix = 'message-';\n  }\n  success(content, options) {\n    return this.createInstance({\n      type: 'success',\n      content\n    }, options);\n  }\n  error(content, options) {\n    return this.createInstance({\n      type: 'error',\n      content\n    }, options);\n  }\n  info(content, options) {\n    return this.createInstance({\n      type: 'info',\n      content\n    }, options);\n  }\n  warning(content, options) {\n    return this.createInstance({\n      type: 'warning',\n      content\n    }, options);\n  }\n  loading(content, options) {\n    return this.createInstance({\n      type: 'loading',\n      content\n    }, options);\n  }\n  create(type, content, options) {\n    return this.createInstance({\n      type,\n      content\n    }, options);\n  }\n  createInstance(message, options) {\n    this.container = this.withContainer(NzMessageContainerComponent);\n    return this.container.create({\n      ...message,\n      ...{\n        createdAt: new Date(),\n        messageId: this.getInstanceId(),\n        options\n      }\n    });\n  }\n  static #_ = this.ɵfac = function NzMessageService_Factory(t) {\n    return new (t || NzMessageService)(i0.ɵɵinject(i1$2.NzSingletonService), i0.ɵɵinject(i2$1.Overlay), i0.ɵɵinject(i0.Injector));\n  };\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: NzMessageService,\n    factory: NzMessageService.ɵfac,\n    providedIn: 'root'\n  });\n}\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzMessageService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i1$2.NzSingletonService\n    }, {\n      type: i2$1.Overlay\n    }, {\n      type: i0.Injector\n    }];\n  }, null);\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NzMNComponent, NzMNContainerComponent, NzMNService, NzMessageComponent, NzMessageContainerComponent, NzMessageModule, NzMessageService };","map":{"version":3,"names":["ComponentPortal","i0","Directive","EventEmitter","Component","ChangeDetectionStrategy","ViewEncapsulation","Input","Output","NgModule","Injectable","Subject","filter","take","takeUntil","i1","toCssPixel","i1$1","CommonModule","moveUpMotion","i2","NzIconModule","i3","NzOutletModule","BidiModule","i2$1","OverlayModule","i1$2","NzMessageComponent_span_4_Template","rf","ctx","ɵɵelement","NzMessageComponent_span_5_Template","NzMessageComponent_span_6_Template","NzMessageComponent_span_7_Template","NzMessageComponent_span_8_Template","NzMessageComponent_ng_container_9_Template","ɵɵelementContainerStart","ɵɵelementContainerEnd","ctx_r5","ɵɵnextContext","ɵɵadvance","ɵɵproperty","instance","content","ɵɵsanitizeHtml","NzMessageContainerComponent_nz_message_1_Template","_r3","ɵɵgetCurrentView","ɵɵelementStart","ɵɵlistener","NzMessageContainerComponent_nz_message_1_Template_nz_message_destroyed_0_listener","$event","ɵɵrestoreView","ctx_r2","ɵɵresetView","remove","id","userAction","ɵɵelementEnd","instance_r1","$implicit","globalCounter","NzMNService","constructor","nzSingletonService","overlay","injector","container","removeAll","getInstanceId","componentPrefix","withContainer","ctor","containerInstance","getSingletonWithKey","overlayRef","create","hasBackdrop","scrollStrategy","scrollStrategies","noop","positionStrategy","position","global","componentPortal","componentRef","attach","overlayWrapper","hostElement","style","zIndex","registerSingletonWithKey","afterAllInstancesRemoved","subscribe","undefined","unregisterSingletonWithKey","dispose","NzMNContainerComponent","cdr","nzConfigService","instances","_afterAllInstancesRemoved","asObservable","destroy$","updateConfig","ngOnInit","subscribeConfigChange","ngOnDestroy","next","complete","data","onCreate","length","config","nzMaxStack","slice","readyInstances","map","index","messageId","forEach","splice","onRemove","onAllInstancesRemoved","i","options","mergeOptions","onClose","detectChanges","nzDuration","nzAnimate","nzPauseOnHover","_","ɵfac","NzMNContainerComponent_Factory","t","ɵɵdirectiveInject","ChangeDetectorRef","NzConfigService","_2","ɵdir","ɵɵdefineDirective","type","ngDevMode","ɵsetClassMetadata","NzMNComponent","destroyed","animationStateChanged","eraseTimer","state","pipe","event","phaseName","toState","clearTimeout","closeTimer","autoClose","initErase","startEraseTimeout","clearEraseTimeout","onEnter","updateTTL","onLeave","destroy","setTimeout","eraseTTL","eraseTimingStart","Date","now","NzMNComponent_Factory","NzMessageComponent","NzMessageComponent_Factory","ɵcmp","ɵɵdefineComponent","selectors","inputs","outputs","exportAs","features","ɵɵInheritDefinitionFeature","decls","vars","consts","template","NzMessageComponent_Template","NzMessageComponent_Template_div_animation_moveUpMotion_done_0_listener","NzMessageComponent_Template_div_mouseenter_0_listener","NzMessageComponent_Template_div_mouseleave_0_listener","ɵɵtemplate","dependencies","NgClass","NgSwitch","NgSwitchCase","NzIconDirective","NzStringTemplateOutletDirective","encapsulation","animation","changeDetection","args","OnPush","None","selector","preserveWhitespaces","animations","NZ_CONFIG_COMPONENT_NAME","NZ_MESSAGE_DEFAULT_CONFIG","nzTop","nzDirection","NzMessageContainerComponent","dir","getConfigForComponent","getConfigChangeEventForComponent","top","markForCheck","NzMessageContainerComponent_Factory","NzMessageContainerComponent_Template","ɵɵstyleProp","ɵɵclassProp","NgForOf","NzMessageModule","NzMessageModule_Factory","ɵmod","ɵɵdefineNgModule","_3","ɵinj","ɵɵdefineInjector","imports","declarations","NzMessageService","success","createInstance","error","info","warning","loading","message","createdAt","NzMessageService_Factory","ɵɵinject","NzSingletonService","Overlay","Injector","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"sources":["D:/practice projects/car-rental/car_rental_angular/node_modules/ng-zorro-antd/fesm2022/ng-zorro-antd-message.mjs"],"sourcesContent":["import { ComponentPortal } from '@angular/cdk/portal';\nimport * as i0 from '@angular/core';\nimport { Directive, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, Output, NgModule, Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { filter, take, takeUntil } from 'rxjs/operators';\nimport * as i1 from 'ng-zorro-antd/core/config';\nimport { toCssPixel } from 'ng-zorro-antd/core/util';\nimport * as i1$1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { moveUpMotion } from 'ng-zorro-antd/core/animation';\nimport * as i2 from 'ng-zorro-antd/icon';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport * as i3 from 'ng-zorro-antd/core/outlet';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport * as i2$1 from '@angular/cdk/overlay';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport * as i1$2 from 'ng-zorro-antd/core/services';\n\nlet globalCounter = 0;\nclass NzMNService {\n    constructor(nzSingletonService, overlay, injector) {\n        this.nzSingletonService = nzSingletonService;\n        this.overlay = overlay;\n        this.injector = injector;\n    }\n    remove(id) {\n        if (this.container) {\n            if (id) {\n                this.container.remove(id);\n            }\n            else {\n                this.container.removeAll();\n            }\n        }\n    }\n    getInstanceId() {\n        return `${this.componentPrefix}-${globalCounter++}`;\n    }\n    withContainer(ctor) {\n        let containerInstance = this.nzSingletonService.getSingletonWithKey(this.componentPrefix);\n        if (containerInstance) {\n            return containerInstance;\n        }\n        const overlayRef = this.overlay.create({\n            hasBackdrop: false,\n            scrollStrategy: this.overlay.scrollStrategies.noop(),\n            positionStrategy: this.overlay.position().global()\n        });\n        const componentPortal = new ComponentPortal(ctor, null, this.injector);\n        const componentRef = overlayRef.attach(componentPortal);\n        const overlayWrapper = overlayRef.hostElement;\n        overlayWrapper.style.zIndex = '1010';\n        if (!containerInstance) {\n            this.container = containerInstance = componentRef.instance;\n            this.nzSingletonService.registerSingletonWithKey(this.componentPrefix, containerInstance);\n            this.container.afterAllInstancesRemoved.subscribe(() => {\n                this.container = undefined;\n                this.nzSingletonService.unregisterSingletonWithKey(this.componentPrefix);\n                overlayRef.dispose();\n            });\n        }\n        return containerInstance;\n    }\n}\nclass NzMNContainerComponent {\n    constructor(cdr, nzConfigService) {\n        this.cdr = cdr;\n        this.nzConfigService = nzConfigService;\n        this.instances = [];\n        this._afterAllInstancesRemoved = new Subject();\n        this.afterAllInstancesRemoved = this._afterAllInstancesRemoved.asObservable();\n        this.destroy$ = new Subject();\n        this.updateConfig();\n    }\n    ngOnInit() {\n        this.subscribeConfigChange();\n    }\n    ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n    create(data) {\n        const instance = this.onCreate(data);\n        if (this.instances.length >= this.config.nzMaxStack) {\n            this.instances = this.instances.slice(1);\n        }\n        this.instances = [...this.instances, instance];\n        this.readyInstances();\n        return instance;\n    }\n    remove(id, userAction = false) {\n        this.instances\n            .map((instance, index) => ({ index, instance }))\n            .filter(({ instance }) => instance.messageId === id)\n            .forEach(({ index, instance }) => {\n            this.instances.splice(index, 1);\n            this.instances = [...this.instances];\n            this.onRemove(instance, userAction);\n            this.readyInstances();\n        });\n        if (!this.instances.length) {\n            this.onAllInstancesRemoved();\n        }\n    }\n    removeAll() {\n        this.instances.forEach(i => this.onRemove(i, false));\n        this.instances = [];\n        this.readyInstances();\n        this.onAllInstancesRemoved();\n    }\n    onCreate(instance) {\n        instance.options = this.mergeOptions(instance.options);\n        instance.onClose = new Subject();\n        return instance;\n    }\n    onRemove(instance, userAction) {\n        instance.onClose.next(userAction);\n        instance.onClose.complete();\n    }\n    onAllInstancesRemoved() {\n        this._afterAllInstancesRemoved.next();\n        this._afterAllInstancesRemoved.complete();\n    }\n    readyInstances() {\n        this.cdr.detectChanges();\n    }\n    mergeOptions(options) {\n        const { nzDuration, nzAnimate, nzPauseOnHover } = this.config;\n        return { nzDuration, nzAnimate, nzPauseOnHover, ...options };\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.10\", ngImport: i0, type: NzMNContainerComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i1.NzConfigService }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.2.10\", type: NzMNContainerComponent, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.10\", ngImport: i0, type: NzMNContainerComponent, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i1.NzConfigService }]; } });\nclass NzMNComponent {\n    constructor(cdr) {\n        this.cdr = cdr;\n        this.destroyed = new EventEmitter();\n        this.animationStateChanged = new Subject();\n        this.userAction = false;\n        this.eraseTimer = null;\n    }\n    ngOnInit() {\n        this.options = this.instance.options;\n        if (this.options.nzAnimate) {\n            this.instance.state = 'enter';\n            this.animationStateChanged\n                .pipe(filter(event => event.phaseName === 'done' && event.toState === 'leave'), take(1))\n                .subscribe(() => {\n                clearTimeout(this.closeTimer);\n                this.destroyed.next({ id: this.instance.messageId, userAction: this.userAction });\n            });\n        }\n        this.autoClose = this.options.nzDuration > 0;\n        if (this.autoClose) {\n            this.initErase();\n            this.startEraseTimeout();\n        }\n    }\n    ngOnDestroy() {\n        if (this.autoClose) {\n            this.clearEraseTimeout();\n        }\n        this.animationStateChanged.complete();\n    }\n    onEnter() {\n        if (this.autoClose && this.options.nzPauseOnHover) {\n            this.clearEraseTimeout();\n            this.updateTTL();\n        }\n    }\n    onLeave() {\n        if (this.autoClose && this.options.nzPauseOnHover) {\n            this.startEraseTimeout();\n        }\n    }\n    destroy(userAction = false) {\n        this.userAction = userAction;\n        if (this.options.nzAnimate) {\n            this.instance.state = 'leave';\n            this.cdr.detectChanges();\n            this.closeTimer = setTimeout(() => {\n                this.closeTimer = undefined;\n                this.destroyed.next({ id: this.instance.messageId, userAction });\n            }, 200);\n        }\n        else {\n            this.destroyed.next({ id: this.instance.messageId, userAction });\n        }\n    }\n    initErase() {\n        this.eraseTTL = this.options.nzDuration;\n        this.eraseTimingStart = Date.now();\n    }\n    updateTTL() {\n        if (this.autoClose) {\n            this.eraseTTL -= Date.now() - this.eraseTimingStart;\n        }\n    }\n    startEraseTimeout() {\n        if (this.eraseTTL > 0) {\n            this.clearEraseTimeout();\n            this.eraseTimer = setTimeout(() => this.destroy(), this.eraseTTL);\n            this.eraseTimingStart = Date.now();\n        }\n        else {\n            this.destroy();\n        }\n    }\n    clearEraseTimeout() {\n        if (this.eraseTimer !== null) {\n            clearTimeout(this.eraseTimer);\n            this.eraseTimer = null;\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.10\", ngImport: i0, type: NzMNComponent, deps: [{ token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.2.10\", type: NzMNComponent, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.10\", ngImport: i0, type: NzMNComponent, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }]; } });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzMessageComponent extends NzMNComponent {\n    constructor(cdr) {\n        super(cdr);\n        this.destroyed = new EventEmitter();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.10\", ngImport: i0, type: NzMessageComponent, deps: [{ token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.10\", type: NzMessageComponent, selector: \"nz-message\", inputs: { instance: \"instance\" }, outputs: { destroyed: \"destroyed\" }, exportAs: [\"nzMessage\"], usesInheritance: true, ngImport: i0, template: `\n    <div\n      class=\"ant-message-notice\"\n      [@moveUpMotion]=\"instance.state\"\n      (@moveUpMotion.done)=\"animationStateChanged.next($event)\"\n      (mouseenter)=\"onEnter()\"\n      (mouseleave)=\"onLeave()\"\n    >\n      <div class=\"ant-message-notice-content\">\n        <div class=\"ant-message-custom-content\" [ngClass]=\"'ant-message-' + instance.type\">\n          <ng-container [ngSwitch]=\"instance.type\">\n            <span *ngSwitchCase=\"'success'\" nz-icon nzType=\"check-circle\"></span>\n            <span *ngSwitchCase=\"'info'\" nz-icon nzType=\"info-circle\"></span>\n            <span *ngSwitchCase=\"'warning'\" nz-icon nzType=\"exclamation-circle\"></span>\n            <span *ngSwitchCase=\"'error'\" nz-icon nzType=\"close-circle\"></span>\n            <span *ngSwitchCase=\"'loading'\" nz-icon nzType=\"loading\"></span>\n          </ng-container>\n          <ng-container *nzStringTemplateOutlet=\"instance.content\">\n            <span [innerHTML]=\"instance.content\"></span>\n          </ng-container>\n        </div>\n      </div>\n    </div>\n  `, isInline: true, dependencies: [{ kind: \"directive\", type: i1$1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i1$1.NgSwitch, selector: \"[ngSwitch]\", inputs: [\"ngSwitch\"] }, { kind: \"directive\", type: i1$1.NgSwitchCase, selector: \"[ngSwitchCase]\", inputs: [\"ngSwitchCase\"] }, { kind: \"directive\", type: i2.NzIconDirective, selector: \"[nz-icon]\", inputs: [\"nzSpin\", \"nzRotate\", \"nzType\", \"nzTheme\", \"nzTwotoneColor\", \"nzIconfont\"], exportAs: [\"nzIcon\"] }, { kind: \"directive\", type: i3.NzStringTemplateOutletDirective, selector: \"[nzStringTemplateOutlet]\", inputs: [\"nzStringTemplateOutletContext\", \"nzStringTemplateOutlet\"], exportAs: [\"nzStringTemplateOutlet\"] }], animations: [moveUpMotion], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.10\", ngImport: i0, type: NzMessageComponent, decorators: [{\n            type: Component,\n            args: [{\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    selector: 'nz-message',\n                    exportAs: 'nzMessage',\n                    preserveWhitespaces: false,\n                    animations: [moveUpMotion],\n                    template: `\n    <div\n      class=\"ant-message-notice\"\n      [@moveUpMotion]=\"instance.state\"\n      (@moveUpMotion.done)=\"animationStateChanged.next($event)\"\n      (mouseenter)=\"onEnter()\"\n      (mouseleave)=\"onLeave()\"\n    >\n      <div class=\"ant-message-notice-content\">\n        <div class=\"ant-message-custom-content\" [ngClass]=\"'ant-message-' + instance.type\">\n          <ng-container [ngSwitch]=\"instance.type\">\n            <span *ngSwitchCase=\"'success'\" nz-icon nzType=\"check-circle\"></span>\n            <span *ngSwitchCase=\"'info'\" nz-icon nzType=\"info-circle\"></span>\n            <span *ngSwitchCase=\"'warning'\" nz-icon nzType=\"exclamation-circle\"></span>\n            <span *ngSwitchCase=\"'error'\" nz-icon nzType=\"close-circle\"></span>\n            <span *ngSwitchCase=\"'loading'\" nz-icon nzType=\"loading\"></span>\n          </ng-container>\n          <ng-container *nzStringTemplateOutlet=\"instance.content\">\n            <span [innerHTML]=\"instance.content\"></span>\n          </ng-container>\n        </div>\n      </div>\n    </div>\n  `\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }]; }, propDecorators: { instance: [{\n                type: Input\n            }], destroyed: [{\n                type: Output\n            }] } });\n\nconst NZ_CONFIG_COMPONENT_NAME = 'message';\nconst NZ_MESSAGE_DEFAULT_CONFIG = {\n    nzAnimate: true,\n    nzDuration: 3000,\n    nzMaxStack: 7,\n    nzPauseOnHover: true,\n    nzTop: 24,\n    nzDirection: 'ltr'\n};\nclass NzMessageContainerComponent extends NzMNContainerComponent {\n    constructor(cdr, nzConfigService) {\n        super(cdr, nzConfigService);\n        this.dir = 'ltr';\n        const config = this.nzConfigService.getConfigForComponent(NZ_CONFIG_COMPONENT_NAME);\n        this.dir = config?.nzDirection || 'ltr';\n    }\n    subscribeConfigChange() {\n        this.nzConfigService\n            .getConfigChangeEventForComponent(NZ_CONFIG_COMPONENT_NAME)\n            .pipe(takeUntil(this.destroy$))\n            .subscribe(() => {\n            this.updateConfig();\n            const config = this.nzConfigService.getConfigForComponent(NZ_CONFIG_COMPONENT_NAME);\n            if (config) {\n                const { nzDirection } = config;\n                this.dir = nzDirection || this.dir;\n            }\n        });\n    }\n    updateConfig() {\n        this.config = {\n            ...NZ_MESSAGE_DEFAULT_CONFIG,\n            ...this.config,\n            ...this.nzConfigService.getConfigForComponent(NZ_CONFIG_COMPONENT_NAME)\n        };\n        this.top = toCssPixel(this.config.nzTop);\n        this.cdr.markForCheck();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.10\", ngImport: i0, type: NzMessageContainerComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i1.NzConfigService }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.10\", type: NzMessageContainerComponent, selector: \"nz-message-container\", exportAs: [\"nzMessageContainer\"], usesInheritance: true, ngImport: i0, template: `\n    <div class=\"ant-message\" [class.ant-message-rtl]=\"dir === 'rtl'\" [style.top]=\"top\">\n      <nz-message\n        *ngFor=\"let instance of instances\"\n        [instance]=\"instance\"\n        (destroyed)=\"remove($event.id, $event.userAction)\"\n      ></nz-message>\n    </div>\n  `, isInline: true, dependencies: [{ kind: \"directive\", type: i1$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"component\", type: NzMessageComponent, selector: \"nz-message\", inputs: [\"instance\"], outputs: [\"destroyed\"], exportAs: [\"nzMessage\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.10\", ngImport: i0, type: NzMessageContainerComponent, decorators: [{\n            type: Component,\n            args: [{\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    selector: 'nz-message-container',\n                    exportAs: 'nzMessageContainer',\n                    preserveWhitespaces: false,\n                    template: `\n    <div class=\"ant-message\" [class.ant-message-rtl]=\"dir === 'rtl'\" [style.top]=\"top\">\n      <nz-message\n        *ngFor=\"let instance of instances\"\n        [instance]=\"instance\"\n        (destroyed)=\"remove($event.id, $event.userAction)\"\n      ></nz-message>\n    </div>\n  `\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i1.NzConfigService }]; } });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzMessageModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.10\", ngImport: i0, type: NzMessageModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.2.10\", ngImport: i0, type: NzMessageModule, declarations: [NzMessageContainerComponent, NzMessageComponent], imports: [BidiModule, CommonModule, OverlayModule, NzIconModule, NzOutletModule] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.2.10\", ngImport: i0, type: NzMessageModule, imports: [BidiModule, CommonModule, OverlayModule, NzIconModule, NzOutletModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.10\", ngImport: i0, type: NzMessageModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [BidiModule, CommonModule, OverlayModule, NzIconModule, NzOutletModule],\n                    declarations: [NzMessageContainerComponent, NzMessageComponent]\n                }]\n        }] });\n\nclass NzMessageService extends NzMNService {\n    constructor(nzSingletonService, overlay, injector) {\n        super(nzSingletonService, overlay, injector);\n        this.componentPrefix = 'message-';\n    }\n    success(content, options) {\n        return this.createInstance({ type: 'success', content }, options);\n    }\n    error(content, options) {\n        return this.createInstance({ type: 'error', content }, options);\n    }\n    info(content, options) {\n        return this.createInstance({ type: 'info', content }, options);\n    }\n    warning(content, options) {\n        return this.createInstance({ type: 'warning', content }, options);\n    }\n    loading(content, options) {\n        return this.createInstance({ type: 'loading', content }, options);\n    }\n    create(type, content, options) {\n        return this.createInstance({ type, content }, options);\n    }\n    createInstance(message, options) {\n        this.container = this.withContainer(NzMessageContainerComponent);\n        return this.container.create({\n            ...message,\n            ...{\n                createdAt: new Date(),\n                messageId: this.getInstanceId(),\n                options\n            }\n        });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.10\", ngImport: i0, type: NzMessageService, deps: [{ token: i1$2.NzSingletonService }, { token: i2$1.Overlay }, { token: i0.Injector }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.2.10\", ngImport: i0, type: NzMessageService, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.10\", ngImport: i0, type: NzMessageService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return [{ type: i1$2.NzSingletonService }, { type: i2$1.Overlay }, { type: i0.Injector }]; } });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NzMNComponent, NzMNContainerComponent, NzMNService, NzMessageComponent, NzMessageContainerComponent, NzMessageModule, NzMessageService };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}