{"ast":null,"code":"import * as i0 from \"@angular/core\";\nconst TOKEN = \"token\";\nconst USER = \"user\";\nexport class StorageService {\n  constructor() {}\n  static saveToken(token) {\n    window.localStorage.removeItem(TOKEN);\n    window.localStorage.setItem(TOKEN, token);\n  }\n  static saveUser(user) {\n    window.localStorage.removeItem(USER);\n    window.localStorage.setItem(USER, JSON.stringify(user));\n  }\n  static #_ = this.ɵfac = function StorageService_Factory(t) {\n    return new (t || StorageService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: StorageService,\n    factory: StorageService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["TOKEN","USER","StorageService","constructor","saveToken","token","window","localStorage","removeItem","setItem","saveUser","user","JSON","stringify","_","_2","factory","ɵfac","providedIn"],"sources":["D:\\practice projects\\car-rental\\car_rental_angular\\src\\app\\auth\\service\\storage\\storage.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\nconst TOKEN = \"token\";\nconst USER = \"user\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StorageService {\n\n  constructor() { }\n\n  static saveToken(token: string): void {\n    window.localStorage.removeItem(TOKEN);\n    window.localStorage.setItem(TOKEN, token);\n  }\n\n  static saveUser(user: any): void {\n    window.localStorage.removeItem(USER);\n    window.localStorage.setItem(USER, JSON.stringify(user));\n  }\n\n}\n"],"mappings":";AAEA,MAAMA,KAAK,GAAG,OAAO;AACrB,MAAMC,IAAI,GAAG,MAAM;AAKnB,OAAM,MAAOC,cAAc;EAEzBC,YAAA,GAAgB;EAEhB,OAAOC,SAASA,CAACC,KAAa;IAC5BC,MAAM,CAACC,YAAY,CAACC,UAAU,CAACR,KAAK,CAAC;IACrCM,MAAM,CAACC,YAAY,CAACE,OAAO,CAACT,KAAK,EAAEK,KAAK,CAAC;EAC3C;EAEA,OAAOK,QAAQA,CAACC,IAAS;IACvBL,MAAM,CAACC,YAAY,CAACC,UAAU,CAACP,IAAI,CAAC;IACpCK,MAAM,CAACC,YAAY,CAACE,OAAO,CAACR,IAAI,EAAEW,IAAI,CAACC,SAAS,CAACF,IAAI,CAAC,CAAC;EACzD;EAAC,QAAAG,CAAA,G;qBAZUZ,cAAc;EAAA;EAAA,QAAAa,EAAA,G;WAAdb,cAAc;IAAAc,OAAA,EAAdd,cAAc,CAAAe,IAAA;IAAAC,UAAA,EAFb;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}