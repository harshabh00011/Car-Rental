/**
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */
import { Component, ViewEncapsulation, ChangeDetectionStrategy, Input } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "ng-zorro-antd/tooltip";
class NzCronExpressionLabelComponent {
    constructor() {
        this.type = 'second';
        this.valid = true;
        this.labelFocus = null;
        this.labelError = 'secondError';
    }
    ngOnInit() {
        this.labelError = `${this.type}Error`;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.10", ngImport: i0, type: NzCronExpressionLabelComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.10", type: NzCronExpressionLabelComponent, selector: "nz-cron-expression-label", inputs: { type: "type", valid: "valid", locale: "locale", labelFocus: "labelFocus" }, exportAs: ["nzCronExpressionLabel"], ngImport: i0, template: `
    <div
      class="ant-cron-expression-label"
      [class.ant-cron-expression-label-foucs]="labelFocus === type"
      [class.ant-cron-expression-error]="!valid"
    >
      <label nz-tooltip [nzTooltipTitle]="error" [nzTooltipVisible]="!valid" nzTooltipPlacement="bottom">
        {{ locale[type] }}
      </label>
    </div>
    <ng-template #error>
      <div class="ant-cron-expression-hint" [innerHTML]="locale[labelError]"></div>
    </ng-template>
  `, isInline: true, dependencies: [{ kind: "directive", type: i1.NzTooltipDirective, selector: "[nz-tooltip]", inputs: ["nzTooltipTitle", "nzTooltipTitleContext", "nz-tooltip", "nzTooltipTrigger", "nzTooltipPlacement", "nzTooltipOrigin", "nzTooltipVisible", "nzTooltipMouseEnterDelay", "nzTooltipMouseLeaveDelay", "nzTooltipOverlayClassName", "nzTooltipOverlayStyle", "nzTooltipArrowPointAtCenter", "nzTooltipColor"], outputs: ["nzTooltipVisibleChange"], exportAs: ["nzTooltip"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }
}
export { NzCronExpressionLabelComponent };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.10", ngImport: i0, type: NzCronExpressionLabelComponent, decorators: [{
            type: Component,
            args: [{
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    encapsulation: ViewEncapsulation.None,
                    selector: 'nz-cron-expression-label',
                    exportAs: 'nzCronExpressionLabel',
                    template: `
    <div
      class="ant-cron-expression-label"
      [class.ant-cron-expression-label-foucs]="labelFocus === type"
      [class.ant-cron-expression-error]="!valid"
    >
      <label nz-tooltip [nzTooltipTitle]="error" [nzTooltipVisible]="!valid" nzTooltipPlacement="bottom">
        {{ locale[type] }}
      </label>
    </div>
    <ng-template #error>
      <div class="ant-cron-expression-hint" [innerHTML]="locale[labelError]"></div>
    </ng-template>
  `
                }]
        }], ctorParameters: function () { return []; }, propDecorators: { type: [{
                type: Input
            }], valid: [{
                type: Input
            }], locale: [{
                type: Input
            }], labelFocus: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3Jvbi1leHByZXNzaW9uLWxhYmVsLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2NvbXBvbmVudHMvY3Jvbi1leHByZXNzaW9uL2Nyb24tZXhwcmVzc2lvbi1sYWJlbC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7OztHQUdHO0FBRUgsT0FBTyxFQUFFLFNBQVMsRUFBRSxpQkFBaUIsRUFBRSx1QkFBdUIsRUFBRSxLQUFLLEVBQVUsTUFBTSxlQUFlLENBQUM7OztBQU1yRyxNQW9CYSw4QkFBOEI7SUFPekM7UUFOUyxTQUFJLEdBQWEsUUFBUSxDQUFDO1FBQzFCLFVBQUssR0FBWSxJQUFJLENBQUM7UUFFdEIsZUFBVSxHQUFrQixJQUFJLENBQUM7UUFDMUMsZUFBVSxHQUFrQixhQUFhLENBQUM7SUFFM0IsQ0FBQztJQUVoQixRQUFRO1FBQ04sSUFBSSxDQUFDLFVBQVUsR0FBRyxHQUFHLElBQUksQ0FBQyxJQUFJLE9BQU8sQ0FBQztJQUN4QyxDQUFDOytHQVhVLDhCQUE4QjttR0FBOUIsOEJBQThCLDJMQWYvQjs7Ozs7Ozs7Ozs7OztHQWFUOztTQUVVLDhCQUE4Qjs0RkFBOUIsOEJBQThCO2tCQXBCMUMsU0FBUzttQkFBQztvQkFDVCxlQUFlLEVBQUUsdUJBQXVCLENBQUMsTUFBTTtvQkFDL0MsYUFBYSxFQUFFLGlCQUFpQixDQUFDLElBQUk7b0JBQ3JDLFFBQVEsRUFBRSwwQkFBMEI7b0JBQ3BDLFFBQVEsRUFBRSx1QkFBdUI7b0JBQ2pDLFFBQVEsRUFBRTs7Ozs7Ozs7Ozs7OztHQWFUO2lCQUNGOzBFQUVVLElBQUk7c0JBQVosS0FBSztnQkFDRyxLQUFLO3NCQUFiLEtBQUs7Z0JBQ0csTUFBTTtzQkFBZCxLQUFLO2dCQUNHLFVBQVU7c0JBQWxCLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFVzZSBvZiB0aGlzIHNvdXJjZSBjb2RlIGlzIGdvdmVybmVkIGJ5IGFuIE1JVC1zdHlsZSBsaWNlbnNlIHRoYXQgY2FuIGJlXG4gKiBmb3VuZCBpbiB0aGUgTElDRU5TRSBmaWxlIGF0IGh0dHBzOi8vZ2l0aHViLmNvbS9ORy1aT1JSTy9uZy16b3Jyby1hbnRkL2Jsb2IvbWFzdGVyL0xJQ0VOU0VcbiAqL1xuXG5pbXBvcnQgeyBDb21wb25lbnQsIFZpZXdFbmNhcHN1bGF0aW9uLCBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgSW5wdXQsIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBOekNyb25FeHByZXNzaW9uTGFiZWxJMThuIH0gZnJvbSAnbmctem9ycm8tYW50ZC9pMThuJztcblxuaW1wb3J0IHsgVGltZVR5cGUsIFRpbWVUeXBlRXJyb3IgfSBmcm9tICcuL3R5cGluZ3MnO1xuXG5AQ29tcG9uZW50KHtcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG4gIGVuY2Fwc3VsYXRpb246IFZpZXdFbmNhcHN1bGF0aW9uLk5vbmUsXG4gIHNlbGVjdG9yOiAnbnotY3Jvbi1leHByZXNzaW9uLWxhYmVsJyxcbiAgZXhwb3J0QXM6ICduekNyb25FeHByZXNzaW9uTGFiZWwnLFxuICB0ZW1wbGF0ZTogYFxuICAgIDxkaXZcbiAgICAgIGNsYXNzPVwiYW50LWNyb24tZXhwcmVzc2lvbi1sYWJlbFwiXG4gICAgICBbY2xhc3MuYW50LWNyb24tZXhwcmVzc2lvbi1sYWJlbC1mb3Vjc109XCJsYWJlbEZvY3VzID09PSB0eXBlXCJcbiAgICAgIFtjbGFzcy5hbnQtY3Jvbi1leHByZXNzaW9uLWVycm9yXT1cIiF2YWxpZFwiXG4gICAgPlxuICAgICAgPGxhYmVsIG56LXRvb2x0aXAgW256VG9vbHRpcFRpdGxlXT1cImVycm9yXCIgW256VG9vbHRpcFZpc2libGVdPVwiIXZhbGlkXCIgbnpUb29sdGlwUGxhY2VtZW50PVwiYm90dG9tXCI+XG4gICAgICAgIHt7IGxvY2FsZVt0eXBlXSB9fVxuICAgICAgPC9sYWJlbD5cbiAgICA8L2Rpdj5cbiAgICA8bmctdGVtcGxhdGUgI2Vycm9yPlxuICAgICAgPGRpdiBjbGFzcz1cImFudC1jcm9uLWV4cHJlc3Npb24taGludFwiIFtpbm5lckhUTUxdPVwibG9jYWxlW2xhYmVsRXJyb3JdXCI+PC9kaXY+XG4gICAgPC9uZy10ZW1wbGF0ZT5cbiAgYFxufSlcbmV4cG9ydCBjbGFzcyBOekNyb25FeHByZXNzaW9uTGFiZWxDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuICBASW5wdXQoKSB0eXBlOiBUaW1lVHlwZSA9ICdzZWNvbmQnO1xuICBASW5wdXQoKSB2YWxpZDogYm9vbGVhbiA9IHRydWU7XG4gIEBJbnB1dCgpIGxvY2FsZSE6IE56Q3JvbkV4cHJlc3Npb25MYWJlbEkxOG47XG4gIEBJbnB1dCgpIGxhYmVsRm9jdXM6IHN0cmluZyB8IG51bGwgPSBudWxsO1xuICBsYWJlbEVycm9yOiBUaW1lVHlwZUVycm9yID0gJ3NlY29uZEVycm9yJztcblxuICBjb25zdHJ1Y3RvcigpIHt9XG5cbiAgbmdPbkluaXQoKTogdm9pZCB7XG4gICAgdGhpcy5sYWJlbEVycm9yID0gYCR7dGhpcy50eXBlfUVycm9yYDtcbiAgfVxufVxuIl19