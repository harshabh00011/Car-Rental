/**
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */
import { ChangeDetectionStrategy, Component, Input } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "./resize-handle.component";
export const DEFAULT_RESIZE_DIRECTION = [
    'bottomRight',
    'topRight',
    'bottomLeft',
    'topLeft',
    'bottom',
    'right',
    'top',
    'left'
];
function normalizeResizeHandleOptions(value) {
    return value.map(val => {
        if (typeof val === 'string') {
            return {
                direction: val,
                cursorType: 'window'
            };
        }
        return val;
    });
}
class NzResizeHandlesComponent {
    constructor() {
        this.nzDirections = DEFAULT_RESIZE_DIRECTION;
        this.resizeHandleOptions = normalizeResizeHandleOptions(this.nzDirections);
    }
    ngOnChanges(changes) {
        if (changes.nzDirections) {
            this.resizeHandleOptions = normalizeResizeHandleOptions(changes.nzDirections.currentValue);
        }
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.10", ngImport: i0, type: NzResizeHandlesComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.10", type: NzResizeHandlesComponent, selector: "nz-resize-handles", inputs: { nzDirections: "nzDirections" }, exportAs: ["nzResizeHandles"], usesOnChanges: true, ngImport: i0, template: `
    <nz-resize-handle
      *ngFor="let option of resizeHandleOptions"
      [nzDirection]="option.direction"
      [nzCursorType]="option.cursorType"
    ></nz-resize-handle>
  `, isInline: true, dependencies: [{ kind: "directive", type: i1.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "component", type: i2.NzResizeHandleComponent, selector: "nz-resize-handle, [nz-resize-handle]", inputs: ["nzDirection", "nzCursorType"], outputs: ["nzMouseDown"], exportAs: ["nzResizeHandle"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
export { NzResizeHandlesComponent };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.10", ngImport: i0, type: NzResizeHandlesComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'nz-resize-handles',
                    exportAs: 'nzResizeHandles',
                    template: `
    <nz-resize-handle
      *ngFor="let option of resizeHandleOptions"
      [nzDirection]="option.direction"
      [nzCursorType]="option.cursorType"
    ></nz-resize-handle>
  `,
                    changeDetection: ChangeDetectionStrategy.OnPush
                }]
        }], propDecorators: { nzDirections: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVzaXplLWhhbmRsZXMuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vY29tcG9uZW50cy9yZXNpemFibGUvcmVzaXplLWhhbmRsZXMuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7R0FHRztBQUVILE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUE0QixNQUFNLGVBQWUsQ0FBQzs7OztBQUlwRyxNQUFNLENBQUMsTUFBTSx3QkFBd0IsR0FBd0I7SUFDM0QsYUFBYTtJQUNiLFVBQVU7SUFDVixZQUFZO0lBQ1osU0FBUztJQUNULFFBQVE7SUFDUixPQUFPO0lBQ1AsS0FBSztJQUNMLE1BQU07Q0FDUCxDQUFDO0FBT0YsU0FBUyw0QkFBNEIsQ0FBQyxLQUFzRDtJQUMxRixPQUFPLEtBQUssQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLEVBQUU7UUFDckIsSUFBSSxPQUFPLEdBQUcsS0FBSyxRQUFRLEVBQUU7WUFDM0IsT0FBTztnQkFDTCxTQUFTLEVBQUUsR0FBRztnQkFDZCxVQUFVLEVBQUUsUUFBUTthQUNyQixDQUFDO1NBQ0g7UUFFRCxPQUFPLEdBQUcsQ0FBQztJQUNiLENBQUMsQ0FBQyxDQUFDO0FBQ0wsQ0FBQztBQUVELE1BWWEsd0JBQXdCO0lBWnJDO1FBYVcsaUJBQVksR0FBb0Qsd0JBQXdCLENBQUM7UUFFbEcsd0JBQW1CLEdBQUcsNEJBQTRCLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxDQUFDO0tBT3ZFO0lBTEMsV0FBVyxDQUFDLE9BQXNCO1FBQ2hDLElBQUksT0FBTyxDQUFDLFlBQVksRUFBRTtZQUN4QixJQUFJLENBQUMsbUJBQW1CLEdBQUcsNEJBQTRCLENBQUMsT0FBTyxDQUFDLFlBQVksQ0FBQyxZQUFZLENBQUMsQ0FBQztTQUM1RjtJQUNILENBQUM7K0dBVFUsd0JBQXdCO21HQUF4Qix3QkFBd0IsdUpBVHpCOzs7Ozs7R0FNVDs7U0FHVSx3QkFBd0I7NEZBQXhCLHdCQUF3QjtrQkFacEMsU0FBUzttQkFBQztvQkFDVCxRQUFRLEVBQUUsbUJBQW1CO29CQUM3QixRQUFRLEVBQUUsaUJBQWlCO29CQUMzQixRQUFRLEVBQUU7Ozs7OztHQU1UO29CQUNELGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNO2lCQUNoRDs4QkFFVSxZQUFZO3NCQUFwQixLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSBhbiBNSVQtc3R5bGUgbGljZW5zZSB0aGF0IGNhbiBiZVxuICogZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBhdCBodHRwczovL2dpdGh1Yi5jb20vTkctWk9SUk8vbmctem9ycm8tYW50ZC9ibG9iL21hc3Rlci9MSUNFTlNFXG4gKi9cblxuaW1wb3J0IHsgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENvbXBvbmVudCwgSW5wdXQsIE9uQ2hhbmdlcywgU2ltcGxlQ2hhbmdlcyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBOekN1cnNvclR5cGUsIE56UmVzaXplRGlyZWN0aW9uIH0gZnJvbSAnLi9yZXNpemUtaGFuZGxlLmNvbXBvbmVudCc7XG5cbmV4cG9ydCBjb25zdCBERUZBVUxUX1JFU0laRV9ESVJFQ1RJT046IE56UmVzaXplRGlyZWN0aW9uW10gPSBbXG4gICdib3R0b21SaWdodCcsXG4gICd0b3BSaWdodCcsXG4gICdib3R0b21MZWZ0JyxcbiAgJ3RvcExlZnQnLFxuICAnYm90dG9tJyxcbiAgJ3JpZ2h0JyxcbiAgJ3RvcCcsXG4gICdsZWZ0J1xuXTtcblxuZXhwb3J0IGludGVyZmFjZSBOelJlc2l6ZUhhbmRsZU9wdGlvbiB7XG4gIGRpcmVjdGlvbjogTnpSZXNpemVEaXJlY3Rpb247XG4gIGN1cnNvclR5cGU6IE56Q3Vyc29yVHlwZTtcbn1cblxuZnVuY3Rpb24gbm9ybWFsaXplUmVzaXplSGFuZGxlT3B0aW9ucyh2YWx1ZTogQXJyYXk8TnpSZXNpemVEaXJlY3Rpb24gfCBOelJlc2l6ZUhhbmRsZU9wdGlvbj4pOiBOelJlc2l6ZUhhbmRsZU9wdGlvbltdIHtcbiAgcmV0dXJuIHZhbHVlLm1hcCh2YWwgPT4ge1xuICAgIGlmICh0eXBlb2YgdmFsID09PSAnc3RyaW5nJykge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgZGlyZWN0aW9uOiB2YWwsXG4gICAgICAgIGN1cnNvclR5cGU6ICd3aW5kb3cnXG4gICAgICB9O1xuICAgIH1cblxuICAgIHJldHVybiB2YWw7XG4gIH0pO1xufVxuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICduei1yZXNpemUtaGFuZGxlcycsXG4gIGV4cG9ydEFzOiAnbnpSZXNpemVIYW5kbGVzJyxcbiAgdGVtcGxhdGU6IGBcbiAgICA8bnotcmVzaXplLWhhbmRsZVxuICAgICAgKm5nRm9yPVwibGV0IG9wdGlvbiBvZiByZXNpemVIYW5kbGVPcHRpb25zXCJcbiAgICAgIFtuekRpcmVjdGlvbl09XCJvcHRpb24uZGlyZWN0aW9uXCJcbiAgICAgIFtuekN1cnNvclR5cGVdPVwib3B0aW9uLmN1cnNvclR5cGVcIlxuICAgID48L256LXJlc2l6ZS1oYW5kbGU+XG4gIGAsXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoXG59KVxuZXhwb3J0IGNsYXNzIE56UmVzaXplSGFuZGxlc0NvbXBvbmVudCBpbXBsZW1lbnRzIE9uQ2hhbmdlcyB7XG4gIEBJbnB1dCgpIG56RGlyZWN0aW9uczogQXJyYXk8TnpSZXNpemVEaXJlY3Rpb24gfCBOelJlc2l6ZUhhbmRsZU9wdGlvbj4gPSBERUZBVUxUX1JFU0laRV9ESVJFQ1RJT047XG5cbiAgcmVzaXplSGFuZGxlT3B0aW9ucyA9IG5vcm1hbGl6ZVJlc2l6ZUhhbmRsZU9wdGlvbnModGhpcy5uekRpcmVjdGlvbnMpO1xuXG4gIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpOiB2b2lkIHtcbiAgICBpZiAoY2hhbmdlcy5uekRpcmVjdGlvbnMpIHtcbiAgICAgIHRoaXMucmVzaXplSGFuZGxlT3B0aW9ucyA9IG5vcm1hbGl6ZVJlc2l6ZUhhbmRsZU9wdGlvbnMoY2hhbmdlcy5uekRpcmVjdGlvbnMuY3VycmVudFZhbHVlKTtcbiAgICB9XG4gIH1cbn1cbiJdfQ==