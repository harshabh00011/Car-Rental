/**
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */
import { BidiModule } from '@angular/cdk/bidi';
import { ScrollingModule } from '@angular/cdk/scrolling';
import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { NzNoAnimationModule } from 'ng-zorro-antd/core/no-animation';
import { NzTreeNodeCheckboxComponent } from './checkbox';
import { NzTreeNodeIndentLineDirective, NzTreeNodeIndentsComponent } from './indent';
import { NzTreeNodeComponent, NzTreeNodeDefDirective, NzTreeVirtualScrollNodeOutletDirective } from './node';
import { NzTreeNodeOptionComponent } from './option';
import { NzTreeNodeOutletDirective } from './outlet';
import { NzTreeNodePaddingDirective } from './padding';
import { NzTreeNodeNoopToggleDirective, NzTreeNodeToggleActiveIconDirective, NzTreeNodeToggleDirective, NzTreeNodeToggleRotateIconDirective } from './toggle';
import { NzTreeView } from './tree';
import { NzTreeViewComponent } from './tree-view';
import { NzTreeVirtualScrollViewComponent } from './tree-virtual-scroll-view';
import * as i0 from "@angular/core";
const treeWithControlComponents = [
    NzTreeView,
    NzTreeNodeOutletDirective,
    NzTreeViewComponent,
    NzTreeNodeDefDirective,
    NzTreeNodeComponent,
    NzTreeNodeToggleDirective,
    NzTreeNodePaddingDirective,
    NzTreeNodeToggleRotateIconDirective,
    NzTreeNodeToggleActiveIconDirective,
    NzTreeNodeOptionComponent,
    NzTreeNodeNoopToggleDirective,
    NzTreeNodeCheckboxComponent,
    NzTreeNodeIndentsComponent,
    NzTreeVirtualScrollViewComponent,
    NzTreeVirtualScrollNodeOutletDirective,
    NzTreeNodeIndentLineDirective
];
class NzTreeViewModule {
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.10", ngImport: i0, type: NzTreeViewModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }
    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "16.2.10", ngImport: i0, type: NzTreeViewModule, declarations: [NzTreeView,
            NzTreeNodeOutletDirective,
            NzTreeViewComponent,
            NzTreeNodeDefDirective,
            NzTreeNodeComponent,
            NzTreeNodeToggleDirective,
            NzTreeNodePaddingDirective,
            NzTreeNodeToggleRotateIconDirective,
            NzTreeNodeToggleActiveIconDirective,
            NzTreeNodeOptionComponent,
            NzTreeNodeNoopToggleDirective,
            NzTreeNodeCheckboxComponent,
            NzTreeNodeIndentsComponent,
            NzTreeVirtualScrollViewComponent,
            NzTreeVirtualScrollNodeOutletDirective,
            NzTreeNodeIndentLineDirective], imports: [BidiModule, CommonModule, NzNoAnimationModule, ScrollingModule], exports: [NzTreeView,
            NzTreeNodeOutletDirective,
            NzTreeViewComponent,
            NzTreeNodeDefDirective,
            NzTreeNodeComponent,
            NzTreeNodeToggleDirective,
            NzTreeNodePaddingDirective,
            NzTreeNodeToggleRotateIconDirective,
            NzTreeNodeToggleActiveIconDirective,
            NzTreeNodeOptionComponent,
            NzTreeNodeNoopToggleDirective,
            NzTreeNodeCheckboxComponent,
            NzTreeNodeIndentsComponent,
            NzTreeVirtualScrollViewComponent,
            NzTreeVirtualScrollNodeOutletDirective,
            NzTreeNodeIndentLineDirective] }); }
    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "16.2.10", ngImport: i0, type: NzTreeViewModule, imports: [BidiModule, CommonModule, NzNoAnimationModule, ScrollingModule] }); }
}
export { NzTreeViewModule };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.10", ngImport: i0, type: NzTreeViewModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [BidiModule, CommonModule, NzNoAnimationModule, ScrollingModule],
                    declarations: [treeWithControlComponents],
                    exports: [treeWithControlComponents]
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJlZS12aWV3Lm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2NvbXBvbmVudHMvdHJlZS12aWV3L3RyZWUtdmlldy5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7OztHQUdHO0FBRUgsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUN6RCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUV6QyxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxpQ0FBaUMsQ0FBQztBQUV0RSxPQUFPLEVBQUUsMkJBQTJCLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFDekQsT0FBTyxFQUFFLDZCQUE2QixFQUFFLDBCQUEwQixFQUFFLE1BQU0sVUFBVSxDQUFDO0FBQ3JGLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxzQkFBc0IsRUFBRSxzQ0FBc0MsRUFBRSxNQUFNLFFBQVEsQ0FBQztBQUM3RyxPQUFPLEVBQUUseUJBQXlCLEVBQUUsTUFBTSxVQUFVLENBQUM7QUFDckQsT0FBTyxFQUFFLHlCQUF5QixFQUFFLE1BQU0sVUFBVSxDQUFDO0FBQ3JELE9BQU8sRUFBRSwwQkFBMEIsRUFBRSxNQUFNLFdBQVcsQ0FBQztBQUN2RCxPQUFPLEVBQ0wsNkJBQTZCLEVBQzdCLG1DQUFtQyxFQUNuQyx5QkFBeUIsRUFDekIsbUNBQW1DLEVBQ3BDLE1BQU0sVUFBVSxDQUFDO0FBQ2xCLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxRQUFRLENBQUM7QUFDcEMsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sYUFBYSxDQUFDO0FBQ2xELE9BQU8sRUFBRSxnQ0FBZ0MsRUFBRSxNQUFNLDRCQUE0QixDQUFDOztBQUU5RSxNQUFNLHlCQUF5QixHQUFHO0lBQ2hDLFVBQVU7SUFDVix5QkFBeUI7SUFDekIsbUJBQW1CO0lBQ25CLHNCQUFzQjtJQUN0QixtQkFBbUI7SUFDbkIseUJBQXlCO0lBQ3pCLDBCQUEwQjtJQUMxQixtQ0FBbUM7SUFDbkMsbUNBQW1DO0lBQ25DLHlCQUF5QjtJQUN6Qiw2QkFBNkI7SUFDN0IsMkJBQTJCO0lBQzNCLDBCQUEwQjtJQUMxQixnQ0FBZ0M7SUFDaEMsc0NBQXNDO0lBQ3RDLDZCQUE2QjtDQUM5QixDQUFDO0FBRUYsTUFLYSxnQkFBZ0I7K0dBQWhCLGdCQUFnQjtnSEFBaEIsZ0JBQWdCLGlCQXZCM0IsVUFBVTtZQUNWLHlCQUF5QjtZQUN6QixtQkFBbUI7WUFDbkIsc0JBQXNCO1lBQ3RCLG1CQUFtQjtZQUNuQix5QkFBeUI7WUFDekIsMEJBQTBCO1lBQzFCLG1DQUFtQztZQUNuQyxtQ0FBbUM7WUFDbkMseUJBQXlCO1lBQ3pCLDZCQUE2QjtZQUM3QiwyQkFBMkI7WUFDM0IsMEJBQTBCO1lBQzFCLGdDQUFnQztZQUNoQyxzQ0FBc0M7WUFDdEMsNkJBQTZCLGFBSW5CLFVBQVUsRUFBRSxZQUFZLEVBQUUsbUJBQW1CLEVBQUUsZUFBZSxhQW5CeEUsVUFBVTtZQUNWLHlCQUF5QjtZQUN6QixtQkFBbUI7WUFDbkIsc0JBQXNCO1lBQ3RCLG1CQUFtQjtZQUNuQix5QkFBeUI7WUFDekIsMEJBQTBCO1lBQzFCLG1DQUFtQztZQUNuQyxtQ0FBbUM7WUFDbkMseUJBQXlCO1lBQ3pCLDZCQUE2QjtZQUM3QiwyQkFBMkI7WUFDM0IsMEJBQTBCO1lBQzFCLGdDQUFnQztZQUNoQyxzQ0FBc0M7WUFDdEMsNkJBQTZCO2dIQVFsQixnQkFBZ0IsWUFKakIsVUFBVSxFQUFFLFlBQVksRUFBRSxtQkFBbUIsRUFBRSxlQUFlOztTQUk3RCxnQkFBZ0I7NEZBQWhCLGdCQUFnQjtrQkFMNUIsUUFBUTttQkFBQztvQkFDUixPQUFPLEVBQUUsQ0FBQyxVQUFVLEVBQUUsWUFBWSxFQUFFLG1CQUFtQixFQUFFLGVBQWUsQ0FBQztvQkFDekUsWUFBWSxFQUFFLENBQUMseUJBQXlCLENBQUM7b0JBQ3pDLE9BQU8sRUFBRSxDQUFDLHlCQUF5QixDQUFDO2lCQUNyQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcbiAqIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgYXQgaHR0cHM6Ly9naXRodWIuY29tL05HLVpPUlJPL25nLXpvcnJvLWFudGQvYmxvYi9tYXN0ZXIvTElDRU5TRVxuICovXG5cbmltcG9ydCB7IEJpZGlNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jZGsvYmlkaSc7XG5pbXBvcnQgeyBTY3JvbGxpbmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jZGsvc2Nyb2xsaW5nJztcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBOek5vQW5pbWF0aW9uTW9kdWxlIH0gZnJvbSAnbmctem9ycm8tYW50ZC9jb3JlL25vLWFuaW1hdGlvbic7XG5cbmltcG9ydCB7IE56VHJlZU5vZGVDaGVja2JveENvbXBvbmVudCB9IGZyb20gJy4vY2hlY2tib3gnO1xuaW1wb3J0IHsgTnpUcmVlTm9kZUluZGVudExpbmVEaXJlY3RpdmUsIE56VHJlZU5vZGVJbmRlbnRzQ29tcG9uZW50IH0gZnJvbSAnLi9pbmRlbnQnO1xuaW1wb3J0IHsgTnpUcmVlTm9kZUNvbXBvbmVudCwgTnpUcmVlTm9kZURlZkRpcmVjdGl2ZSwgTnpUcmVlVmlydHVhbFNjcm9sbE5vZGVPdXRsZXREaXJlY3RpdmUgfSBmcm9tICcuL25vZGUnO1xuaW1wb3J0IHsgTnpUcmVlTm9kZU9wdGlvbkNvbXBvbmVudCB9IGZyb20gJy4vb3B0aW9uJztcbmltcG9ydCB7IE56VHJlZU5vZGVPdXRsZXREaXJlY3RpdmUgfSBmcm9tICcuL291dGxldCc7XG5pbXBvcnQgeyBOelRyZWVOb2RlUGFkZGluZ0RpcmVjdGl2ZSB9IGZyb20gJy4vcGFkZGluZyc7XG5pbXBvcnQge1xuICBOelRyZWVOb2RlTm9vcFRvZ2dsZURpcmVjdGl2ZSxcbiAgTnpUcmVlTm9kZVRvZ2dsZUFjdGl2ZUljb25EaXJlY3RpdmUsXG4gIE56VHJlZU5vZGVUb2dnbGVEaXJlY3RpdmUsXG4gIE56VHJlZU5vZGVUb2dnbGVSb3RhdGVJY29uRGlyZWN0aXZlXG59IGZyb20gJy4vdG9nZ2xlJztcbmltcG9ydCB7IE56VHJlZVZpZXcgfSBmcm9tICcuL3RyZWUnO1xuaW1wb3J0IHsgTnpUcmVlVmlld0NvbXBvbmVudCB9IGZyb20gJy4vdHJlZS12aWV3JztcbmltcG9ydCB7IE56VHJlZVZpcnR1YWxTY3JvbGxWaWV3Q29tcG9uZW50IH0gZnJvbSAnLi90cmVlLXZpcnR1YWwtc2Nyb2xsLXZpZXcnO1xuXG5jb25zdCB0cmVlV2l0aENvbnRyb2xDb21wb25lbnRzID0gW1xuICBOelRyZWVWaWV3LFxuICBOelRyZWVOb2RlT3V0bGV0RGlyZWN0aXZlLFxuICBOelRyZWVWaWV3Q29tcG9uZW50LFxuICBOelRyZWVOb2RlRGVmRGlyZWN0aXZlLFxuICBOelRyZWVOb2RlQ29tcG9uZW50LFxuICBOelRyZWVOb2RlVG9nZ2xlRGlyZWN0aXZlLFxuICBOelRyZWVOb2RlUGFkZGluZ0RpcmVjdGl2ZSxcbiAgTnpUcmVlTm9kZVRvZ2dsZVJvdGF0ZUljb25EaXJlY3RpdmUsXG4gIE56VHJlZU5vZGVUb2dnbGVBY3RpdmVJY29uRGlyZWN0aXZlLFxuICBOelRyZWVOb2RlT3B0aW9uQ29tcG9uZW50LFxuICBOelRyZWVOb2RlTm9vcFRvZ2dsZURpcmVjdGl2ZSxcbiAgTnpUcmVlTm9kZUNoZWNrYm94Q29tcG9uZW50LFxuICBOelRyZWVOb2RlSW5kZW50c0NvbXBvbmVudCxcbiAgTnpUcmVlVmlydHVhbFNjcm9sbFZpZXdDb21wb25lbnQsXG4gIE56VHJlZVZpcnR1YWxTY3JvbGxOb2RlT3V0bGV0RGlyZWN0aXZlLFxuICBOelRyZWVOb2RlSW5kZW50TGluZURpcmVjdGl2ZVxuXTtcblxuQE5nTW9kdWxlKHtcbiAgaW1wb3J0czogW0JpZGlNb2R1bGUsIENvbW1vbk1vZHVsZSwgTnpOb0FuaW1hdGlvbk1vZHVsZSwgU2Nyb2xsaW5nTW9kdWxlXSxcbiAgZGVjbGFyYXRpb25zOiBbdHJlZVdpdGhDb250cm9sQ29tcG9uZW50c10sXG4gIGV4cG9ydHM6IFt0cmVlV2l0aENvbnRyb2xDb21wb25lbnRzXVxufSlcbmV4cG9ydCBjbGFzcyBOelRyZWVWaWV3TW9kdWxlIHt9XG4iXX0=